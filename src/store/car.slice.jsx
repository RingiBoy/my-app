import { createSlice } from "@reduxjs/toolkit";

const carSlice = createSlice({
  name: "carSlice", //идентификатор слайса, их может быть много и мы указываем под каким именем будет первый слайс)
  //далее мы должны указать начальное значение нашего стейта: указываем, что это будет объект фиг скобками {}
  initialState: {
    cars: [], //по умолчанию у нас там будет пустой массив. п.с. положили туда наши карсы.
  },
  reducers: {
    //через запятую пишем наши редюсерсы, а в них наши методы котрыми ми будет рабоать с нашим стейтом
    addCar: (state, action) => {
        state.cars.push({
          id:new Date().getTime(),   //далее передаем данные с формы в виде объекта дата, мы должны его деструктуризировать. Приходят они в наш єкшин, поєтому его и десттруктуризируем
          ...action.payload.data     //тк. мы передали данные Дэйта как объект, то достаем данные через пейлоад точка дата, если бы мы передавали не объект, то достаточно было бы написать пейлоад без  точка Дэйта
        })
    }, //это будет стрел. функция, котрая в себя будет принимать стейт и экшин
    deleteCar: (state, action) => {
      state.cars=state.cars.filter(car=>car.id!==action.payload.id)  //id записался в пейлоад из компоненты кар в диспатче
    }
  },
});

//методы экспортируем для использования , но что бы к ним обратиться нужно их получить из функции касСлайс через деструктуризацию

export const { addCar, deleteCar } = carSlice.actions; //т.к. они являю.тся экшинами нашей функции!

//так же экспортируем весь редюсер, пока непонятно зачем и что там внутри
const carReducer = carSlice.reducer; 
export default carReducer;
